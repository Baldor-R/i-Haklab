#!/data/data/com.termux/files/usr/bin/bash
# coded by @Ivam3
#This file will reactive login-termux
IFS=$'\n\t'
set -euo pipefail
trap ctrl_c 2
source $PREFIX/libexec/colors
Cinderella=$(base64 -d $PREFIX/libexec/termux/.Ivam3)
Seque=$(base64 -d $PREFIX/libexec/termux/.Quiz)
Secan=$(base64 -d $PREFIX/libexec/termux/.Cinderella)
function ctrl_c() {
        printf "$Y
          [!]:->$R t.me/Ivam3byCinderella$Y <-:[!]$W \n"
        sleep 1
}
if [ -L ~/storage/external-1 ]; then
        iHAKLAB=/data/data/com.termux/files/home/storage/external-1/roothome/i-haklab
else
        iHAKLAB=/data/data/com.termux/files/home/i-haklab
fi

while [ ! $(id -u) -ne 0 ]; do
        printf "$R\n[W]:-> You need to be a common user$W\n"
        exit
done
until [ ! -d $iHAKLAB ]; do
        printf "$R\n[W]:-> i-Haklab needed$W |$Y Do you wanna install it?$W\n"
        while read -p "       [yes/no]:-> " yesorno && [ -z $yesorno ]; do
                continue
        done
if [ $yesorno = "yes" ] || [ $yesorno = "Yes" ] || [ $yesorno = "YES" ]; then
        git clone https://github.com/ivam3/i-Haklab.git $HOME/i-Haklab
        cd ~/i-Haklab;bash setup
else
        printf "$G\n[!]-> Have a nice hacking day!!\n\n"
        exit
fi
done

echo $(clear)
for i in  ------------------@ IVAM3-------------@ IVAM3-by----------@ IVAM3-by-CINDERELLA; do
        printf "$(clear) $C STARTING TO REACTIVE LOGGIN TERMUX. . . .$i"
        printf "\n\n"
        sleep 1
done
for opt in 1 2 3; do
        let try=opt++
        echo $(clear)
        source $PREFIX/libexec/banner/login-banner
        printf "$B"
        while read -s -p "                    >> ACCESS KEY <<
            " Ivam3 && [ -z $Ivam3 ];do
        printf "$R         Access denied$B \n"
        done

        if [ $Ivam3 = $Cinderella ]; then
                echo $(clear)
		rm $PREFIX/etc/bash.bashrc
                echo "command_not_found_handle() {" > $PREFIX/etc/bash.bashrc
		echo "        /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"" >> $PREFIX/etc/bash.bashrc
		echo "}" >> $PREFIX/etc/bash.bashrc
		echo " " >> $PREFIX/etc/bash.bashrc
		echo "source $PREFIX/var/log/login-termux" >> $PREFIX/etc/bash.bashrc
		echo " " >> $PREFIX/etc/bash.bashrc
		echo "PS1="\[\e[33m\][!] \[\e[31m\]Type\[\e[32m\] exit\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]"" >> $PREFIX/etc/bash.bashrc
		echo "#         @Ivam3" >> $PREFIX/etc/bash.bashrc
                break
        else
                printf "$R         Access denied$Y
                      (try $try - 3) \n"
                sleep 1
                echo
        fi
done
        if [ $try = 3 ]; then
                printf "$Y                O-ops!! Too many tries$W"
                sleep 3
                echo $(clear)
                source $PREFIX/libexec/banner/login-banner
                printf "$Y"
                printf "        [!] Let's try with the security question$G"
                echo "
                "
                while read -s -p "              $Seque " Quiz && [ -z $Quiz ]; do
                        echo ""
                        printf "$Y          [!]:->$R t.me/Ivam3byCinderella$Y <-:[!]$W \n"
                done
                if [ $Quiz = $Secan ]; then
                        printf "$W"
                        echo $(clear)
			rm $PREFIX/etc/bash.bashrc
			echo "command_not_found_handle() {" > $PREFIX/etc/bash.bashrc
			echo "        /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"" >> $PREFIX/etc/bash.bashrc
			echo "}" >> $PREFIX/etc/bash.bashrc
			echo " " >> $PREFIX/etc/bash.bashrc
			echo "source $PREFIX/var/log/login-termux" >> $PREFIX/etc/bash.bashrc
                	echo " " >> $PREFIX/etc/bash.bashrc
                	echo "PS1="\[\e[33m\][!] \[\e[31m\]Type\[\e[32m\] exit\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]"" >> $PREFIX/etc/bash.bashrc
                	echo "#         @Ivam3" >> $PREFIX/etc/bash.bashrc
                else
                        printf "$R\n                     Access denied$W \n"
                        sleep 1
                fi
        fi
