#!/data/data/com.termux/files/usr/bin/sh
# Coded on Agust 2019 by Ivam3
# This file bring a easy access to execute i-Haklab tools
#
iHAKLAB=$(cat $PREFIX/etc/fish/config.fish | grep iHAKLAB | awk '{print $3}')
SCRIPT_NAME=$(basename "$1")
BEEF_PATH="/data/data/com.termux/files/usr/opt/beef"
GO_PATH=$(cat $PREFIX/etc/fish/config.fish | grep GOPATH | awk '{print $3}')
BACK=$(pwd)

if [ ! $(id -u) -ne 0 ]; then
	HOME=$HOME/../
fi
if [ -d $HOME/i-Haklab ]; then
	TMP_PATH="$HOME"
elif [ -d $HOME/storage/external-1/roothome/i-Haklab ]; then
	TMP_PATH="$HOME/storage/external-1/roothome"
else
	echo "$R\n[w]-> i-Haklab directory undefined <-[w]$W\n"
	exit
fi
CHECKROOT=$(bash $TMP_PATH/i-Haklab/.set/to-install/check-root)
STDERR() {
	echo "$R\n[w] i-Haklab :$W $SCRIPT_NAME is not installed$W\n"
	exit
}
STDERROOT() {
	echo "$R\n[w] i-Haklab :$W Your device is not rooted$W\n"
	exit
}
Banner() {
        if [ -e $iHAKLAB/.set/libexec/banner/i-Haklab ]; then
                bash $iHAKLAB/.set/libexec/banner/i-Haklab
                sleep 0.5
        fi
}
#
# Fix ruby bigdecimal extensions linking error.
case "$(uname -m)" in
	aarch64)
		export LD_PRELOAD="$LD_PRELOAD:/data/data/com.termux/files/usr/lib/ruby/2.6.0/aarch64-linux-android/bigdecimal.so"
		;;
	arm*)
		export LD_PRELOAD="$LD_PRELOAD:/data/data/com.termux/files/usr/lib/ruby/2.6.0/arm-linux-androideabi/bigdecimal.so"
		;;
	i686)
		export LD_PRELOAD="$LD_PRELOAD:/data/data/com.termux/files/usr/lib/ruby/2.6.0/i686-linux-android/bigdecimal.so"
		;;
	x86_64)
		export LD_PRELOAD="$LD_PRELOAD:/data/data/com.termux/files/usr/lib/ruby/2.6.0/x86_64-linux-android/bigdecimal.so"
		;;
	*)
		;;
esac

if [ -z $SCRIPT_NAME ]; then
	Banner
	echo "$Y\n[!] Syntax :$W run [-name-of-tool/framework-]\n\n
|─Tool/Framework─|──────────────────────Description────────────────────────────|
╰─────aio────────➤  Accounts autopay generator
╰────d-tect──────➤  Search web vulnerabilities
╰─────a2sv───────➤  Find web SSL vulnerabilities
╰──adminpanel────➤  Admin panel web searcher.
╰───androbugs────➤  Search vulnerabilities in .apk files
╰───aquatone─────➤  Search domain, subdomains, hosts scanner, headers HTTP, HTML body
╰─────beef───────➤  Web penetration framework
╰──binchecker────➤  Information gathering about credit/debit card
╰────binwalk─────➤  Searching and given binary image for embedded files and executable code.
╰────blackbox────➤  Tool for Bruteforcing attacks, Information Gathering, Dorking, Cracking and Exploit web vulnerabilities.
╰────cc-genpro───➤  Bins and temporal e-mails generator.
╰───cloudbunny───➤  Real IP server searcher under Shodan, Censys y Zoomeye.
╰────credmap─────➤  A reuse credential maper in socials media.
╰──cryptovenom───➤  Cryptosystems and cryptoanalysis methods all in one.
╰────dnsenum─────➤  Enumerate DNS information of a domain and to discover non-contiguous ip blocks.
╰────evilurl─────➤  Generate unicode evil domains for IDN Homograph Attack and detect them.
╰───exploitdb────➤  Public exploits and corresponding vulnerable software, developed for use by penetration testers and vulnerability researchers
╰────fbbrute─────➤  Brute force tool to substract facebook user credencials.
╰──────fbi───────➤  Accurate facebook account information gathering
╰──GetNPUserss───➤  Attempt to list and get TGTs for those users that have the property
╰────Gobuster────➤  Gobuster is a tool used to brute-force URIs in web sites, DNS subdomains and Virtual Host names on target web servers.
╰────gophish─────➤  Launch simulated and monitored phishing campaigns.
╰─────hakku──────➤  Penetration testing tools.
╰────hatcloud────➤  Real IP CloudFlare server searcher.
╰─────hunner─────➤  Penetracion tool with sql vulnerabilityScan xxs vulnerabilityDos sitesBrutforce FtpBrutforse SShBrutforse and emails.
╰─ipgeolocation──➤  Ip accurately geolocatetor.
╰────kerbrute────➤  Perform kerberos bruteforcing by using the Impacket library.
╰───lockphish────➤ 
╰─────nikto──────➤  Web server scanner which performs comprehensive tests against web servers for multiple items.
╰──phoneinfoga───➤  Scan phone numbers to first gather standard information.
╰──phonesploit───➤  Exploit a device using open Adb ports (adbfastboot needed)
╰────pybelt──────➤  Complete open source hackers tool.
╰───recon-ng─────➤  Providing a powerful environment to conduct open source web-based reconnaissance.
╰──────dog───────➤  Reconnaissance Swiss Army Knife.
╰─────rhawk──────➤  Information Gathering and Vulnerability Scanning.
╰──────rsf───────➤  Exploitation framework dedicated to embedded routers.
╰───saycheese────➤  Grab target's webcam shots by link.
╰───sayhello─────➤  Grab target's short voice audio by link.
╰─────seeker─────➤  Accurately Locate Smartphones using Social Engineering.
╰──shellphish────➤  Script de automatizacion de servidor phishing para 18 redes sociales.
╰──shellsploit───➤  Powerful phishing tool.
╰─────sqliv──────➤  Massive SQL injection scanner.
╰────sqlmap──────➤  Penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database server. 
╰──theharvester──➤  Gather emails, subdomains, hosts, employee names, open ports and banners from different public sources like search engines, PGP key servers and SHODAN computer database.
╰──webhackshl────➤  Vulnerability analysis and information collection of websites and servers.
╰───whatweb──────➤  Identifie websites (DNS).
╰────wpscan──────➤  Black box WordPress vulnerability scanner.\n"
	exit
fi

case "$SCRIPT_NAME" in
	beef|beef-xss)
		if [ -d $BEEF_PATH ]; then
			cd $BEEF_PATH
			exec ruby "$BEEF_PATH/$SCRIPT_NAME" "$2" "$@"
			cd $BACK
		else
			STDERR
		fi
		;;
	wpscan)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
			cd $TMP_PATH/$SCRIPT_NAME/bin
			exec ruby "$TMP_PATH/$SCRIPT_NAME/bin/$SCRIPT_NAME" "$@"
			cd $BACK
		else
			STDERR
		fi
		;;
	androbugs)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
			cd $TMP_PATH/$SCRIPT_NAME
			exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$2" "$@"
			cd $BACK
		else
			STDERR
		fi
		;;
	d-tect)
		if [ -d $TMP_PATH/D-TECT-1 ]; then
                        cd $TMP_PATH/D-TECT-1
                        exec python2 "$TMP_PATH/D-TECT-1/$SCRIPT_NAME.py" "$@"
                        cd $BACK
                else
                        STDERR
		fi
		;;
	adminpanel)
		if [ -d $TMP_PATH/admin_panel ]; then
                        cd $TMP_PATH/admin_panel
                        exec python2 "$TMP_PATH/admin_panel/admin_panel.py" "$@"
                        cd $BACK
                else
                        STDERR
                fi
		;;
	cc-genpro)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/cc-genpro1.2.py" "$@"
                        cd $BACK
                else
                        STDERR
		fi
		;;
	credmap)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$@"
                        cd $BACK
                else
			STDERR
		fi
		;;
	evilurl)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$@"
                        cd $BACK
                else
                        STDERR
		fi
		;;
	ExiF)
		if [ -e $TMP_PATH/$SCRIPT_NAME ]; then
			cd $TMP_PATH/$SCRIPT_NAME
			exec bash $TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME
			cd $BACK
		else
			STDERR
		fi
		;;
	exploitdb)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec bash "$TMP_PATH/$SCRIPT_NAME/searchsploit" "$2" "$@"
                        cd $BACK
                else
                        STDERR
		fi
		;;
	fbbrute)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py"
                        cd $BACK
                else
                        STDERR
		fi
		;;
	fbi)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py"
                        cd $BACK
                else
                        STDERR
		fi
		;;
	phoneinfoga)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/PhoneInfoga
                        exec python "$TMP_PATH/PhoneInfoga/$SCRIPT_NAME.py" "$2" "$@"
                        cd $BACK
                else
			STDERR
		fi
                ;;
	phonesploit)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
			cd $TMP_PATH/$SCRIP_NAME
			exec python2 "$TMP_PATH/$SCRIPT_NAME/main_linux.py"
			cd $BACK
		else
			STDERR
		fi
		;;
	hatcloud)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/HatCloud
                        exec ruby "$TMP_PATH/HatCloud/$SCRIPT_NAME.rb" "$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	cloudbunny)
		if [ -d $TMP_PATH/CloudBunny ]; then
			cd $TMP_PATH/CloudBunny
			if [ -f $TMP_PATH/CloudBunny/api.conf.txt ]; then
				mv $TMP_PATH/CloudBunny/api.conf.txt $TMP_PATH/CloudBunny/api.conf
			fi
			if [ $2 ]; then
				exec python2 "$TMP_PATH/CloudBunny/$SCRIPT_NAME.py" "$@"
				cd $BACK
                        else
                                exec python2 "$TMP_PATH/CloudBunny/$SCRIPT_NAME.py" "-h"
                        fi
                else
                        STDERR
                fi
		;;
	hunner)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	ipgeolocation)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/IPGeoLocation
			if [ ! -z $2 ]; then
				exec python "$TMP_PATH/IPGeoLocation/$SCRIPT_NAME.py" "$2" "$@"
			else
				exec python "$TMP_PATH/IPGeoLocation/$SCRIPT_NAME.py" "-h"
			fi
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	pybelt)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/Pybelt
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	rhawk)
                if [ -d $TMP_PATH/RED_HAWK ]; then
                        cd $TMP_PATH/RED_HAWK
                        php "$TMP_PATH/RED_HAWK//$SCRIPT_NAME.php" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	dog)
                if [ -d $TMP_PATH/recondog ]; then
			cd $TMP_PATH/recondog
			if [ $2 ]; then
				exec python "$TMP_PATH/recondog/$SCRIPT_NAME" "$2" "$@"
			else
				exec python "$TMP_PATH/recondog/$SCRIPT_NAME" "-h"
			fi
			cd $BACK
                else
                        STDERR
                fi
                ;;
	sigploit)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	whatweb)
                if [ -d $TMP_PATH/WhatWeb ]; then
                        cd $TMP_PATH/WhatWeb
			if [ ! -z $2 ];then
				exec ruby "$TMP_PATH/WhatWeb/$SCRIPT_NAME" "$2" "$@" 
			else
				exec ruby "$TMP_PATH/WhatWeb/$SCRIPT_NAME" "-h"
			fi
                        cd $BACK
                else
                        STDERR
                fi
		;;
	hakku)
                if [ -d $TMP_PATH/hakkuframework ]; then
                        cd $TMP_PATH/hakkuframework
                        exec python "$TMP_PATH/hakkuframework/$SCRIPT_NAME" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
		;;
	lockphish)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec bash "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.sh"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	nikto)
		if [ $CHECKROOT = "root" ]; then
			command -v sudo > /dev/null || bash $TMP_PATH/i-Haklab/.set/to-install/instasudo
			if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
				cd $TMP_PATH/$SCRIPT_NAME
				exec sudo perl "$TMP_PATH/$SCRIPT_NAME/program/$SCRIPT_NAME.pl" "$@"
				cd $BACK
			else
				STDERR
			fi
		else
			STDERROOT
		fi
		;;
	recon-ng)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME" "--no-check"
                        cd $BACK
                else
                        STDERR
                fi
		;;
	rsf)
                if [ -d $TMP_PATH/routersploit ]; then
                        cd $TMP_PATH/routersploit
                        exec python "$TMP_PATH/routersploit/$SCRIPT_NAME.py"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	saycheese)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec bash "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.sh"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	sayhello)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec bash "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.sh"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	seeker)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
			if [ $2 ]; then
				exec python "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$2" "$@"
			else
				exec python "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "--help"
			fi
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	shellphish)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec bash "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.sh" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	shellsploit)
                if [ -d $TMP_PATH/$SCRIPT_NAME-framework ]; then
                        cd $TMP_PATH/$SCRIPT_NAME-framework
                        exec python "$TMP_PATH/$SCRIPT_NAME-framework/$SCRIPT_NAME.py" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	aio)
                if [ -d $TMP_PATH/AIOChk ]; then
                        cd $TMP_PATH/AIOChk
                        exec php "$TMP_PATH/AIOChk/$SCRIPT_NAME.php" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	sqliv)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python2 "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$2" "$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	binwalk)
		if [ -e $PREFIX/bin/$SCRIPT_NAME ]; then
			if [ $2 ]; then
				exec python "$PREFIX/bin/$SCRIPT_NAME" "$2" "$@"
			else
				exec python "$PREFIX/bin/$SCRIPT_NAME" "-h"
			fi
		else
			STDERR
		fi
		;;
	bincheker)
		if [ -e $PREFIX/bin/$SCRIPT_NAME ]; then
			exec bash "$PREFIX/bin/$SCRIPT_NAME"
		else
			STDERR
		fi
		;;
	blackbox)
		if [ -e $PREFIX/bin/$SCRIPT_NAME ]; then
			if [ $2 ]; then
				exec python2 "$PREFIX/bin/$SCRIPT_NAME" "$2" "$@"
			else
				exec python2 "$PREFIX/bin/$SCRIPT_NAME" "-h"
			fi
		else
			STDERR
		fi
		;;
	dnsenum)
		if [ $CHECKROOT = "root" ]; then
			command -v sudo > /dev/null || bash $TMP_PATH/i-Haklab/.set/to-install/instasudo
			if [ -e $PREFIX/bin/$SCRIPT_NAME ]; then
				exec sudo perl "$PREFIX/bin/$SCRIPT_NAME" "$2" "$@"
			else
				STDERR
			fi
		else
			STDERROOT
		fi
		;;
	theharvester)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py" "$2" "$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	webhackshl)
                if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
                        cd $TMP_PATH/$SCRIPT_NAME
                        exec python "$TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME" #"$@"
                        cd $BACK
                else
                        STDERR
                fi
                ;;
	aquatone)
		if [ -d $HOME/go/bin ]; then
			cd $HOME/go/bin/
			exec $HOME/go/bin/aquatone "$2" "$@"
			cd $BACK
		else
			STDERR
		fi
		;;
	kerbrute)
		if [ -d $TMP_PATH/$SCRIPT_NAME ]; then
			cd $TMP_PATH/$SCRIPT_NAME
			exec python2 $TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py "$2" "$@"
			cd $BACK
		else
			STDERR
		fi
		;;
	GetNPUsers)
		if [ -e $PREFIX/bin/$SCRIPT_NAME ]; then
			exec python $PREFIX/bin/$SCRIPT_NAME "$2" "$@"
		else
			STDERR
		fi
		;;
	cryptovenom)
		if [ -e $TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py ]; then
			exec python2 $TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py
		else
			STDERR
		fi
		;;
	a2sv)
		if [ -e $TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py ]; then
			cd $TMP_PATH/$SCRIPT_NAME
			exec python2 $TMP_PATH/$SCRIPT_NAME/$SCRIPT_NAME.py "$2" "$@"
			cd $BACK
		else
			STDERR
		fi
		;;
	gobuster)
		if [ -e $GO_PATH/bin/$SCRIPT_NAME ]; then
			cd $GO_PATH/bin
			if [ $2 ]; then
				exec $GO_PATH/bin/$SCRIPT_NAME "$2" "$@"
			else
				exec $GO_PATH/bin/$SCRIPT_NAME "-h"
			fi
			cd $BACK
		else
			STDERR
		fi
		;;
	gophish)
		if [ -d $GO_PATH/src/github.com/gophish/gophish/ ]; then
			cd $GO_PATH/src/github.com/gophish/gophish
			./gophish
		else
			STDERR
		fi
		;;
	xerosploit)
		if [ -d $PREFIX/opt/$SCRIPT_NAME ]; then
			command -v sudo > /dev/null || { printf "$R\n[w] i-Haklab :$W command sudo needed$R |$W please install it.\n" ; exit ; }
			cd $PREFIX/opt/$SCRIPT_NAME
			sudo python2 $PREFIX/opt/$SCRIPT_NAME/$SCRIPT_NAME.py
			cd $BACK
		else
			STDERR
		fi
		;;
	*)
		echo "$R\n[w] i-Haklab :$W Unknown argument '$SCRIPT_NAME'\n"
		exit 1
		;;
esac
